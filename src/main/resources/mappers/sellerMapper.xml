<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SellerMapper">
    <select id="getSellers" resultType="map">
    	<!-- 이중조인해서 결제금을 이용해 판매자별 총매출불러오고 format으로 1000단위 구분함. -->
    <!-- 관리자 총매출 구하기전
         SELECT s.seller_num, s.seller_storeName, s.seller_name,
       	 FORMAT(SUM(o.order_pay), 0) AS total_revenue,
         FORMAT(floor(sum(o.order_pay) * 0.05), 0) as fee,
         FORMAT(SUM(o.order_pay) - floor(sum(o.order_pay) * 0.05), 0) as settlement_amount
         FROM seller s
         LEFT JOIN item i ON s.seller_num = i.seller_num
         LEFT JOIN orders o ON i.item_num = o.item_num
         WHERE s.seller_num != 'admin'
         GROUP BY s.seller_num, s.seller_id, s.seller_name;   
    -->
   		 SELECT s.seller_num, s.seller_storeName, s.seller_name,
       	 FORMAT(SUM(o.order_pay), 0) AS total_revenue,
         FORMAT(floor(sum(o.order_pay) * 0.05), 0) as fee,
         FORMAT(SUM(o.order_pay) - floor(sum(o.order_pay) * 0.05), 0) as settlement_amount,
         
         FORMAT((SELECT SUM(o.order_pay) FROM orders o
               INNER JOIN item i ON i.item_num = o.item_num
               INNER JOIN seller s ON s.seller_num = i.seller_num
               WHERE s.seller_num != 'admin'), 0) as grand_total_revenue,
         FORMAT((SELECT SUM(floor(o.order_pay * 0.05)) FROM orders o
               INNER JOIN item i ON i.item_num = o.item_num
               INNER JOIN seller s ON s.seller_num = i.seller_num
               WHERE s.seller_num != 'admin'), 0) as grand_fee,
         FORMAT((SELECT SUM(o.order_pay) - SUM(floor(o.order_pay * 0.05)) FROM orders o
               INNER JOIN item i ON i.item_num = o.item_num
               INNER JOIN seller s ON s.seller_num = i.seller_num
               WHERE s.seller_num != 'admin'), 0) as grand_settlement_amount
         
         FROM seller s
         LEFT JOIN item i ON s.seller_num = i.seller_num
         LEFT JOIN orders o ON i.item_num = o.item_num
         WHERE s.seller_num != 'admin'
         GROUP BY s.seller_num, s.seller_id, s.seller_name;
    </select>
    
	<!-- 가맹점 관리 -->
	<select id="getSeller" resultType="map"> 
	select * from seller; 
	</select>
	
	<!-- 선진) 안쓰는 코드라 일단 주석쳐둠 -->
	<!-- 판매자 체크 -->
<!--     <select id="sellerCheck" resultType="map"> -->
<!--     select * from seller -->
    <!-- where seller_id = #{seller_id} and seller_pass = #{seller_pass} -->
<!--     where seller_num = #{seller_num} -->
<!--   	</select>  -->
  	
  	<!-- 선진) 판매자 정보 가져옴 --><!-- 테스트 -->
    <select id="getSellerInfo" resultType="map">
    select * from seller
    where seller_num = #{seller_num}
    </select>
    
    <!-- 선진) 판매자 정보 수정 -->
    <!-- 판매자 코드가 일치하는 판매자의 개인정보를 수정 -->
    <update id="updateSeller">
  	update seller
  	set seller_email = #{seller_email}, 
  		seller_mobile = #{seller_mobile},
  		seller_phone = #{seller_phone}, 
  		seller_bank = #{seller_bank},
  		seller_accountNum = #{seller_accountNum},
  		seller_accountHolder = #{seller_accountHolder},
  		seller_post = #{seller_post},
  		seller_addMain = #{seller_addMain},
  		seller_addSub = #{seller_addSub}
  	where seller_num = #{seller_num}
    </update>
    
    <!-- 가맹점 상태 Y/N -->
    <update id="approveSellerStatus" parameterType="list">
    update seller
    set seller_recoYn = 'Y'
    where seller_num in 
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item}
    </foreach>
	</update>

	<update id="rejectSellerStatus" parameterType="list">
    update seller
    set seller_recoYn = 'N'
    where seller_num in 
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
        #{item}
    </foreach>
	</update>
    
   <!-- 상품 등록 -->
    <insert id="itemInsert">
       INSERT INTO item (
           category_num,
           item_name,
           item_price,
           item_mainImg,
           item_detail,
           item_register
       )
       VALUES (
           #{category_num},
           #{item_name},
           #{item_price},
           #{item_mainImg},
           #{item_detail},
           now()
       )
   </insert>

    <!-- 상품전체 가져오기  -->
    <select id="getItems" resultType="map">
       SELECT *
       FROM item
    </select>

   <!-- 개별상품 가져오기  -->
   <select id="getItem" resultType="map">
       SELECT *
       FROM item
       WHERE item_num = #{item_num}
       LIMIT 1
   </select>
       
      <!--월별 판매량 가져오기  -->
    <select id="getSales" resultType="map">
       SELECT s.seller_num, s.seller_id, s.seller_name,
          DATE_FORMAT(st.order_day, '%Y-%m') as order_month,
          FORMAT(SUM(o.order_pay), 0) AS total_revenue,
          FORMAT(floor(sum(o.order_pay) * 0.05), 0) as fee,
          FORMAT(SUM(o.order_pay) - floor(sum(o.order_pay) * 0.05), 0) as settlement_amount,
          st.settlement_yn
      FROM seller s
      LEFT JOIN item i ON s.seller_num = i.seller_num
      LEFT JOIN orders o ON i.item_num = o.item_num
      LEFT JOIN settlement st ON s.seller_num = st.seller_num
      WHERE s.seller_num != 'admin'
      GROUP BY s.seller_num, s.seller_id, s.seller_name, order_month, st.settlement_yn
      ORDER BY order_month;
    </select>
    
    
   <!-- 정산작업 아직 미완성구문 -->
<update id="updateSettlementYn" parameterType="map">       
    UPDATE settlement
    SET settlement_yn = 'Y'
    WHERE seller_num IN
    (   <foreach collection="sellerNums" item="sellerNum" open="(" close=")" separator=",">
            #{sellerNum}
        </foreach> ) 
    AND DATE_FORMAT(order_day, '%Y-%m') = #{order_month};
</update>
   

   <!-- 일별 판매량 가져오기 -->
   <select id="daySales" resultType="map" parameterType="map">
      SELECT s.seller_num, s.seller_storeName, s.seller_name,
      DATE_FORMAT(o.order_day, '%Y-%m') as order_month,
       DATE_FORMAT(o.order_day, '%Y-%m-%d') as order_day,
          FORMAT(o.order_pay, 0) as revenue,
          FORMAT(floor((o.order_pay) * 0.05), 0) as fee,
          FORMAT((o.order_pay) - floor((o.order_pay) * 0.05), 0) as income
      FROM seller s
      LEFT JOIN item i ON s.seller_num = i.seller_num
      LEFT JOIN orders o ON i.item_num = o.item_num
      LEFT JOIN settlement st ON s.seller_num = st.seller_num
      WHERE s.seller_num != 'admin'
      AND s.seller_num = #{sellerNum} <!-- s.seller_num을 필터링하기 위해 추가된 부분 -->
       AND DATE_FORMAT(order_day, '%Y-%m') = #{orderMonth} 
      GROUP BY s.seller_num, s.seller_id, s.seller_name, order_day,order_pay
      ORDER BY order_day
      ;
   </select>
   
   <!--판매자별 연간판매량전체-->
   <select id="yearSales" resultType="map" parameterType="map">
       SELECT s.seller_num, s.seller_name,
          DATE_FORMAT(o.order_day, '%Y-%m') as order_month,
         FORMAT(SUM(o.order_pay), 0) AS revenue,
          FORMAT(floor(sum(o.order_pay) * 0.05), 0) as fee,
          FORMAT(SUM(o.order_pay) - floor(sum(o.order_pay) * 0.05), 0) as income
      FROM seller s
      LEFT JOIN item i ON s.seller_num = i.seller_num
      LEFT JOIN orders o ON i.item_num = o.item_num
      LEFT JOIN settlement st ON s.seller_num = st.seller_num
      WHERE s.seller_num != 'admin'
      AND s.seller_num = #{sellerNum}
      GROUP BY s.seller_num, s.seller_name, order_month
      ORDER BY order_month;
   </select>
   
   	<!-- 판매자 회원가입 -->
    <insert id="insertSeller">  
        insert into seller(seller_num, seller_type, seller_licenseNum, seller_id, seller_pass, seller_name, seller_storeName, seller_post, seller_addMain, seller_addSub, seller_phone, seller_bank, seller_accountNum, seller_accountHolder, seller_email, seller_joinDay)
        values((SELECT *
        FROM (
            SELECT CONCAT(#{seller_type}, LPAD( (SELECT COUNT(*) + 1 as next_num 
                            FROM seller 
                           WHERE seller_type = #{seller_type}), 3, '0'))
               FROM DUAL
        ) A), #{seller_type}, #{seller_licenseNum}, #{seller_id},#{seller_pass}, #{seller_name}, #{seller_storeName}, #{seller_post}, #{seller_addMain}, #{seller_addSub}, #{seller_phone}, #{seller_bank}, #{seller_accountNum}, #{seller_accountHolder}, #{seller_email}, now())
    </insert>   
   
   
   
   
</mapper>